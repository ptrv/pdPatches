#N canvas 907 22 472 444 10;
#X msg 158 64 bang;
#X msg 165 86 stop;
#X obj 163 148 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 37 32 dumpOSC 33333;
#X obj 14 36 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 156 360 sendOSC;
#X msg 158 271 connect localhost 33334;
#X msg 163 336 send /triggered;
#X msg 236 61 2000;
#X obj 25 65 OSCroute /mouse;
#X obj 25 122 OSCroute /position;
#X obj 25 155 unpack f f;
#X obj 25 191 + 400;
#X obj -25 103 print;
#X floatatom -13 221 5 0 0 0 - - -;
#X obj 24 249 s freq;
#N canvas 169 231 618 511 blip_generator 0;
#X obj 97 195 tabwrite~ adsr-output;
#X obj 100 163 r graphit;
#X obj 106 258 *~;
#X obj 183 259 osc~ 880;
#X obj 37 30 adsr 1 50 50 0 0;
#X obj 183 231 r freq;
#N canvas 0 22 450 300 (subpatch) 0;
#X array adsr-output 44100 float 0;
#X coords 0 1.02 44100 -1.02 200 130 1;
#X restore 183 304 graph;
#X text 232 453 ------ 1 second ------;
#X text 385 423 -1;
#X text 392 299 1;
#X msg 248 56 bang;
#X text 292 57 <-- attack and delayed release;
#X obj 259 80 del 500;
#X text 347 159 <-- attack only;
#X msg 248 144 \; pd dsp 1 \; trigger 1 \; graphit bang;
#X text 348 236 <-- release only;
#X msg 247 214 \; pd dsp 1 \; trigger 0 \; graphit bang;
#X msg 259 105 \; trigger 0;
#X obj 185 62 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 45 84 r trigger;
#X obj 83 348 output~;
#X obj 240 18 inlet;
#X obj 499 24 inlet;
#X obj 500 59 s freq;
#X obj 129 280 r vol;
#X obj 558 24 inlet;
#X obj 129 302 t b f;
#N canvas 143 22 778 725 myadsr 0;
#X obj 115 121 inlet;
#X obj 445 161 inlet;
#X text 111 96 trigger;
#X obj 115 149 sel 0;
#X obj 254 165 t b;
#X obj 176 274 f \$1;
#X obj 176 299 pack 0 \$2;
#X obj 502 161 inlet;
#X obj 448 291 del \$2;
#X obj 468 439 line~;
#X obj 472 314 f \$4;
#X obj 511 389 pack 0 \$3;
#X obj 564 161 inlet;
#X obj 626 161 inlet;
#X obj 699 160 inlet;
#X msg 115 180 stop;
#X obj 622 316 pack 0 \$5;
#X text 445 139 level;
#X obj 511 365 * \$1;
#X obj 468 464 outlet~;
#X text 112 388 and pack with;
#X text 113 408 attack time;
#X text 41 136 if zero;
#X text 42 153 release;
#X text 22 170 and cancel;
#X text 53 187 decay;
#X text 294 282 on attack \, set a;
#X text 288 315 recall sustain value;
#X text 325 388 pack with decay time;
#X text 615 342 on release ramp;
#X text 616 359 back to zero;
#X obj 472 339 * 0.01;
#X text 57 577 Objects such as "f" and "pack" can be given dollar sign
arguments to initialize their contents from adsr's creation arguments.
Inlets are supplied to change them on the fly.;
#X text 23 12 ADSR ENVELOPE;
#X text 498 139 attack;
#X text 565 138 decay;
#X text 619 139 sustain;
#X text 696 139 release;
#X text 212 81 attack;
#X obj 214 102 moses;
#X obj 204 132 t b b;
#X msg 138 300 0;
#X text 30 283 optionally;
#X text 20 301 bash to zero;
#X text 35 256 ATTACK:;
#X text 59 487 When you send this patch a positive trigger it schedules
a line~ to do an attack and decay \, and if zero \, it starts the release
ramp.;
#X text 505 639 Updated for Pd version 0.37;
#X text 265 99 test for negative trigger;
#X text 263 123 if so \, zero;
#X text 264 139 the output;
#X text 288 175 in any case;
#X text 313 365 multiply by peak level;
#X text 290 296 delay for sustain;
#X text 286 338 convert from percent;
#X text 165 350 ... then;
#X text 113 369 recall peak level;
#X text 449 123 peak;
#X text 291 159 ... do this;
#X text 57 539 Negative triggers cause the output to jump to zero and
then attack (instead of attacking from the current location).;
#X text 218 11 Arguments: level \, attack time \, decay time \, sustain
level \, release time. A \, D \, and R are in msec and S is in percent.
This patch is used as an abstraction in various examples.;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 39 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 39 0 40 0;
#X connect 39 1 4 0;
#X connect 40 0 4 0;
#X connect 40 1 41 0;
#X connect 41 0 9 0;
#X restore 17 111 pd myadsr 1 50 50 0 0;
#X connect 1 0 0 0;
#X connect 2 0 20 0;
#X connect 2 0 20 1;
#X connect 3 0 2 1;
#X connect 5 0 3 0;
#X connect 10 0 14 0;
#X connect 10 0 12 0;
#X connect 12 0 17 0;
#X connect 19 0 27 0;
#X connect 21 0 10 0;
#X connect 21 0 18 0;
#X connect 22 0 23 0;
#X connect 24 0 26 0;
#X connect 26 0 20 2;
#X connect 26 1 20 2;
#X connect 27 0 0 0;
#X connect 27 0 2 0;
#X coords 0 -1 1 1 130 80 1 30 320;
#X restore 210 169 pd blip_generator;
#X msg 236 82 1000;
#X msg 236 103 500;
#X obj 220 10 r click;
#X obj 93 191 + 200;
#X floatatom 62 221 5 0 0 0 - - -;
#X obj 96 249 s click;
#X obj 164 127 metro;
#X obj 348 45 loadbang;
#X obj 348 116 s vol;
#X obj 348 89 dbtorms;
#X msg 348 67 80;
#X msg 236 40 5000;
#X obj -25 78 spigot;
#X obj -22 39 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X connect 0 0 23 0;
#X connect 1 0 23 0;
#X connect 2 0 7 0;
#X connect 2 0 16 0;
#X connect 3 0 4 0;
#X connect 3 0 9 0;
#X connect 3 0 29 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 23 1;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 1 20 0;
#X connect 12 0 14 0;
#X connect 12 0 15 0;
#X connect 17 0 23 1;
#X connect 18 0 23 1;
#X connect 19 0 23 1;
#X connect 20 0 21 0;
#X connect 20 0 22 0;
#X connect 23 0 2 0;
#X connect 24 0 17 0;
#X connect 24 0 27 0;
#X connect 26 0 25 0;
#X connect 27 0 26 0;
#X connect 28 0 8 0;
#X connect 29 0 13 0;
#X connect 30 0 29 1;
